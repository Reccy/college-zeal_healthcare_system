console.log("Started Medical Facility Index script.")

///
/// Maps API Config
///
var map;
var markers = [];

$('document').ready(function() {
    $(".medical-facility-selection").hide();
});

// Init script if on index page
$.getScript('https://maps.google.com/maps/api/js?key=<%= Figaro.env.google_maps_api_key %>', function() {
    // Regular map
    function regularMap() {
        var start_location = new google.maps.LatLng(53.3852251, -8.3228756);

        var map_options = {
            center: start_location,
            zoom: 6
        };

        map = new google.maps.Map(document.getElementById("map-container"),
            map_options);

        window.addEventListener('googlemaps-marker-click', function(e) {
            onMarkerSelected(e);
        }, false);

        populateFacilities();

    }

    // Initialize maps
    google.maps.event.addDomListener(window, 'load', regularMap);
});

// Adds a marker to the map and adds an OnClick listener to manage selected marker
function addMarker(lat, lng, array_id, db_id) {

    var marker = new google.maps.Marker({
        position: new google.maps.LatLng(lat, lng),
        map: map,
    });

    marker.addListener('click', function() {
        var clickEvent = new CustomEvent("googlemaps-marker-click", {
            detail: {
                array_id: array_id,
                marker: marker
            }
        });

        window.dispatchEvent(clickEvent);
    });

    markers.push({
        array_id: array_id,
        db_id: db_id,
        markerObject: marker
    });
}

///
/// View functionality config
///
var facilities = null;
var selectedFacility = null;

// Adds the Facilities from the ActiveRecord DB to the map
function populateFacilities() {
    facilities = medical_facilities;

    for (var i = 0; i < facilities.length; i++) {
        f = facilities[i];

        // Populate map
        addMarker(f.latitude, f.longitude, i, f.id);
    }
}

// Called when the user clicks on a marker.
// Selects the facility
function onMarkerSelected(e) {
    selectFacility(facilities[e.detail.array_id]);
}

// Selects the facility and updates the relevant CSS/HTMl
function selectFacility(e) {
    selectedFacility = e

    map.setZoom(15);
    map.setCenter(getMarkerByDbId(e.id).getPosition());

    // Update info panel
    $(".medical-facility-selection").show();
    $(".facility-details-name").text(selectedFacility.name);
    $(".facility-details-address").text(selectedFacility.address);
    $(".facility-details-description").text(selectedFacility.description);

    // Update links
    $(".medical-facility-btn-view").attr("href", Routes.medical_facility_path(selectedFacility.id));

    $(".medical-facility-btn-edit").attr("href", Routes.edit_medical_facility_path(selectedFacility.id));

    $(".medical-facility-btn-destroy").attr("href", Routes.medical_facility_path(selectedFacility.id));
}

function getMarkerByDbId(db_id) {
    for (var i = 0; i < markers.length; i++) {
        if (markers[i].db_id === db_id) {
            return markers[i].markerObject;
        }
    }
    return null;
}

// Return a facility by checking for the active record id
function getFacilityByDbId(db_id) {
    for (var i = 0; i < facilities.length; i++) {
        console.log(facilities[i])
        if (facilities[i].id === db_id) {
            return facilities[i];
        }
    }

    return null;
}

//
// Search Functionality
//
function facilitySearch() {
    search_value = $('#medical-facility-searchbox').val().toLowerCase();
    console.log("Search Value: [" + search_value + "]");

    $('.medical-facility-card').each(function(i, obj) {
        f_name = $(obj).find('.card-title').text().toLowerCase();
        f_address = $(obj).find('.card-text').text().toLowerCase();

        console.log("Name: " + f_name)
        console.log("Address: " + f_address)

        if (f_name.includes(search_value) || f_address.includes(search_value)) {
            $(obj).removeClass('d-none');
            markers[i].markerObject.setVisible(true);
        } else {
            $(obj).addClass('d-none');
            markers[i].markerObject.setVisible(false);
        }

        console.log("======")
    });
}